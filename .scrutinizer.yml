version: 1

# Global configuration for Scrutinizer
build:
  image: node:18
  nodes:
    analysis:
      services:
        backend:
          name: "backend"
          build:
            context: ./backend
            dockerfile: Dockerfile
          environment:
            - MONGO_DSN=${MONGO_DSN}
            - MONGO_URI=${MONGO_URI}
            - CLIENT_ID=${CLIENT_ID}
            - CLIENT_SECRET=${CLIENT_SECRET}
            - REDIRECT_URI=${REDIRECT_URI}
            - JWT_SECRET=${JWT_SECRET}
            - REDIRECT_URI_FRONTEND=${REDIRECT_URI_FRONTEND}
            - NODE_ENV=simulation
          volumes:
            - ./backend:/app
            - /app/node_modules
          networks:
            - app-network
          depends_on:
            - mongodb
          command: >
            sh -c "node ./data-generation/index.js && node ./database-config/seed.js && npm run nodemon"

        frontend:
          name: "frontend"
          build:
            context: ./frontend
            dockerfile: Dockerfile
          ports:
            - "5173:5173"
          networks:
            - app-network
          volumes:
            - ./frontend:/app
            - /app/node_modules
          depends_on:
            - backend

        frontend_customer:
          name: "frontend_customer"
          build:
            context: ./frontend_customer
            dockerfile: Dockerfile
          ports:
            - "1337:1337"
          networks:
            - app-network
          volumes:
            - ./frontend_customer:/app
            - /app/node_modules
          depends_on:
            - backend

        webapp:
          name: "webapp"
          build:
            context: ./webapp
            dockerfile: Dockerfile
          ports:
            - "3000:3000"
          networks:
            - app-network
          volumes:
            - ./webapp:/app
            - /app/node_modules
          depends_on:
            - backend

        simulation:
          name: "simulation"
          build:
            context: ./bike-brain
            dockerfile: Dockerfile
          environment:
            - BIKE_TOKEN=${BIKE_TOKEN}
          networks:
            - app-network
          depends_on:
            - backend
          stdin_open: true
          tty: true
          command: /bin/sh
          volumes:
            - ./bike-brain:/app
            - /app/node_modules

        mongodb:
          name: "mongodb"
          image: mongo
          environment:
            - MONGO_DATA_DIR=/data/db
          volumes:
            - ./data/db:/data/db
          ports:
            - "27017:27017"
          command: mongod --bind_ip_all
          networks:
            - app-network

  # Define the tests for each service
  tests:
    - name: "Backend Tests"
      command: "cd backend && npm test"
      after: true  # Specifies when the test should run

    - name: "Frontend Tests"
      command: "cd frontend && npm test"
      after: true

    - name: "Frontend Customer Tests"
      command: "cd frontend_customer && npm test"
      after: true

    - name: "Webapp Tests"
      command: "cd webapp && npm test"
      after: true

    - name: "Bike Brain Tests"
      command: "cd bike-brain && npm test"
      after: true

  # Configure the environment for the tests
  environment:
    - NODE_ENV=development
    - MONGO_URI=mongodb://mongo:27017

  # Define linked containers for testing
  linked_containers:
    - backend
    - frontend
    - frontend_customer
    - webapp
    - simulation

networks:
  app-network:
    driver: bridge
