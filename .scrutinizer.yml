# version: 1

# build:
#   nodes:
#     analysis:
#       container: node:18 # Use Node.js image
#       services:
#         - mongodb # Include any services like MongoDB if needed
#       commands:
#         # Install dependencies in all directories with JS projects
#         - cd backend && npm install  # Install dependencies in backend
#         - cd frontend && npm install  # Install dependencies in frontend
#         - cd frontend_customer && npm install  # Install dependencies in frontend_customer
#         - cd webapp && npm install  # Install dependencies in webapp
#         # After installing dependencies, run tests
#         - cd backend && npm test  # Run tests in backend
#         - cd frontend && npm test  # Run tests in frontend
#         - cd frontend_customer && npm test  # Run tests in frontend_customer
#         - cd webapp && npm test  # Run tests in webapp

# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     environment:
#       - NODE_ENV=production
#     volumes:
#       - ./backend:/app
#     depends_on:
#       - mongodb

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     depends_on:
#       - backend

#   frontend_customer:
#     build:
#       context: ./frontend_customer
#       dockerfile: Dockerfile
#     depends_on:
#       - backend

#   webapp:
#     build:
#       context: ./webapp
#       dockerfile: Dockerfile
#     depends_on:
#       - backend

#   mongodb:
#     image: mongo
#     ports:
#       - "27017:27017"

# networks:
#   app-network:
#     driver: bridge
