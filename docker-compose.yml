services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "5000:5000"
        networks:
            - app-network
        volumes:
            - ./backend:/app
            - /app/node_modules # Persist node_modules inside container to avoid overwriting
        depends_on:
            - mongodb # Make sure the database is built
        command:
            > # Run seeding script to populate the database first, then start the server
            sh -c "node seed.js && node index.js"

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "5173:5173" # Changed to Vite default port
        networks:
            - app-network
        volumes:
            - ./frontend:/app
            - /app/node_modules # Persist node_modules inside container to avoid overwriting
        # Uncomment the lines below if file watching is not working as expected!
        # environment:
        #     - CHOKIDAR_USEPOLLING=true
        depends_on:
            - backend # Make sure that the backend is built and running

    mobileapp-customer:
        build:
            context: ./mobileapp-customer
            dockerfile: Dockerfile
        ports:
            - "19006:19006"  # Default port for Expo's React Native packager
            - "19001:19001"  # Debugging port
            - "19002:19002"  # Debugging port
            - "8081:8081"  # Expose Metro Bundler
        networks:
            - app-network
        environment:
            # Enter your own local ip-address below, find it in the terminal with 'hostname -I'
            REACT_NATIVE_PACKAGER_HOSTNAME: "${IP}"
            REACT_APP_API_URL: "http://backend:5000"
        volumes:
            - ./mobileapp-customer:/app
            - /app/node_modules
        depends_on:
            - backend

    mongodb: # Need to create.env
        image: mongo
        environment:
            - MONGO_DATA_DIR=/data/db
            # !! Need to be updated
            #- MONGO_DSN=${MONGO_DSN}
            #- MONGO_URI=${MONGO_URI}
        volumes:
            - ./data/db:/data/db
        ports:
            - "27017:27017"
        command: mongod --bind_ip_all
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
